# These environment variables must be set in CircleCI UI
#
# DOCKERHUB_REPO - docker hub repo, format: <username>/<repo>
# DOCKER_USER    - login info for docker hub
# DOCKER_PASS
# COVERALLS_REPO_TOKEN - used by coveralls-python
# HEROKU_APP_NAME - Name on Heroku
# HEROKU_API_KEY - API key from service account
#
version: 2.1
orbs:
  docker: circleci/docker@2.2.0
  node: circleci/node@5.1.0
  heroku: circleci/heroku@1.2.6
commands:
  checkout_with_submodules:
    description: Checkout releases_insights code and submodules
    steps:
      - checkout
      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip mbstring intl curl dom
      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.lock" }}
          paths:
            #- ./vendor
            - ./
      - restore_cache:
          keys:
            - node-v1-{{ checksum "composer.lock" }}
            - node-v1-
      - run: yarn install
      - save_cache:
          key: node-v1-{{ checksum "composer.lock" }}
          paths:
            - node_modules
executors:
  php:
    docker:
      - image: cimg/php:8.1.17-browsers
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS

  build_test_backend:
    docker:
      - image: docker:stable-git
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    working_directory: /dockerflow
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout_with_submodules
      - setup_remote_docker:
          # Use a version of Docker that works with Node, see
          # https://support.circleci.com/hc/en-us/articles/360050934711-Docker-build-fails-with-EPERM-operation-not-permitted-copyfile-when-using-node-14-9-0-or-later-
          # (apparently version 17.09.0-ce is lower than 1.9.1, but 19.03.13 is not?)
          # and
          # https://github.com/nodejs/docker-node#supported-docker-versions
          # and
          # https://circleci.com/docs/2.0/building-docker-images/#docker-version
          version: 20.10.11
          docker_layer_caching: True
      - restore_cache:
          key: v1-frontend-build-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Copy build artefacts from build_frontend into this folder
          command: mv /home/circleci/project/frontend/out /dockerflow/frontend/

      - run:
          name: Copy email tracker lists into this folder
          command: |
            cp /tmp/workspace/email-trackers/level-one-trackers.json /dockerflow/emails/tracker_lists/
            cp /tmp/workspace/email-trackers/level-two-trackers.json /dockerflow/emails/tracker_lists/

      - run:
          name: Create a version.json
          command: |
            # create a version.json per https://github.com/mozilla-services/Dockerflow/blob/master/docs/version_object.md
            printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' \
            "$CIRCLE_SHA1" \
            "$CIRCLE_TAG" \
            "$CIRCLE_PROJECT_USERNAME" \
            "$CIRCLE_PROJECT_REPONAME" \
            "$CIRCLE_BUILD_URL" > version.json

      - run:
          name: Build Docker image
          command: |
            docker build --tag releases_insights \
            --build-arg CIRCLE_BRANCH="$CIRCLE_BRANCH" \
            --build-arg CIRCLE_TAG="$CIRCLE_TAG" \
            --build-arg CIRCLE_SHA1="$CIRCLE_SHA1" \
            .

      - run:
          name: Check if deploying
          command: |
            if [ "${CIRCLE_BRANCH}" != "main" ] && [ -z "${CIRCLE_TAG}" ]; then
              echo "Skipping exporting Docker image, not main branch or tag."
              circleci step halt
            fi
            # https://stackoverflow.com/a/18558871/10612
            if case $CIRCLE_TAG in addon-*) ;; *) false;; esac; then
              echo "Skipping exporting Docker image, ${CIRCLE_TAG} has addon- prefix."
              circleci step halt
            fi

      # save the built docker container into CircleCI's cache. This is
      # required since Workflows do not have the same remote docker instance.
      - run:
          name: docker save releases_insights
          command: |
            mkdir --parents /tmp/workspace;
            docker save --output /tmp/workspace/docker.tar "releases_insights"
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - docker.tar


  deploy:
    docker:
      - image: docker:18.02.0-ce
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - setup_remote_docker:
          docker_layer_caching: True
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Restore Docker image cache
          command: docker load --input /tmp/workspace/docker.tar

      - run:
          name: Deploy to Dockerhub
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            # deploy master
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              docker tag releases_insights ${DOCKERHUB_REPO}:latest
              docker push ${DOCKERHUB_REPO}:latest
            elif  [ ! -z "${CIRCLE_TAG}" ]; then
            # deploy a release tag...
              echo "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
              docker tag releases_insights "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
              docker images
              docker push "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
            fi



workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build_test_backend:
          requires:
            - build_email_tracker_list_job
            - build_frontend
          filters:
            tags:
              only: /.*/

      - deploy:
          requires:
            - build_test_backend
          filters:
            tags:
              ignore: /addon-.*/
            branches:
              only: master

